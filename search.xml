<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Project MiCard</title>
      <link href="/2020/02/08/Project-MiCard/"/>
      <url>/2020/02/08/Project-MiCard/</url>
      
        <content type="html"><![CDATA[<h1 id="Business-card"><a href="#Business-card" class="headerlink" title="Business card"></a>Business card</h1><img src="/2020/02/08/Project-MiCard/image-20200208205111281.png" width="30%" title="image-20200208205111281" alt="image-20200208205111281"> 第一眼感觉这个界面是不是蛮好看的，其实用Flutter来做很简单，一起来吧。<a id="more"></a><p>首先，我们看到这个名片是垂直方向呈现的，所以我们将使用<code>Column Class</code>，因为是<strong>Multi-child layout widgets</strong>，所以它的子部件是<code>children</code>,而不是<code>child</code>,因为含多个子部件，所以是其子部件是个List, <code>List&lt;Widget&gt;</code>。</p><h2 id="CircleAvatar"><a href="#CircleAvatar" class="headerlink" title="CircleAvatar"></a>CircleAvatar</h2><p>图片中的头像就是利用该组件的。</p><blockquote><p>小技巧：当光标定位到该组件，同时按下<code>Ctrl+Q</code>就可以查看该组件的一些信息了，比如其可用的性质等</p><p><img src="/2020/02/08/Project-MiCard/image-20200208210254619.png" alt="image-20200208210254619"></p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CircleAvatar(</span><br><span class="line">                radius: <span class="number">50.0</span>,</span><br><span class="line">                backgroundImage: AssetImage(<span class="string">'images/git_portrait.jpg'</span>),</span><br><span class="line">              ),</span><br></pre></td></tr></table></figure><p>此处我们将其半径设为50.0，即设计成圆形。另外我们用<code>AssetImage</code>表示<code>backgroundImage</code>。</p><p>让我们回顾下如何使用<code>AssetImage</code>，首先我们创建一个<code>images</code>的文件夹，然后将下载好的图片放置其中，然后去改动<code>pubspec.yaml</code>文件。</p><p><img src="/2020/02/08/Project-MiCard/image-20200208211101874.png" alt="image-20200208211101874"></p><blockquote><p>注意yaml文件对于缩进很<strong>敏感</strong>呦，规定每个缩进是<strong>两个空格</strong></p></blockquote><h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h2><p>下一步就是设计我们的名字啦，我们要用到<code>Text</code>widget，</p><h3 id="TextStyle"><a href="#TextStyle" class="headerlink" title="TextStyle"></a>TextStyle</h3><p>这里用到的属性是<code>style</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Text(</span><br><span class="line">     <span class="string">'Dongyang Yu'</span>,</span><br><span class="line">     style: TextStyle(</span><br><span class="line">     fontSize: <span class="number">40</span>,</span><br><span class="line">     ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h3 id="字体-fontFamily属性"><a href="#字体-fontFamily属性" class="headerlink" title="字体 fontFamily属性"></a>字体 fontFamily属性</h3><p>推荐去<a href="https://fonts.google.com寻找自己喜欢的字体，此处我选择的是‘Pacifico’" target="_blank" rel="noopener">https://fonts.google.com寻找自己喜欢的字体，此处我选择的是‘Pacifico’</a>.</p><p><img src="/2020/02/08/Project-MiCard/image-20200208211840992.png" alt="image-20200208211840992"></p><p>下载完成后是个压缩包，这时我们再去主目录下新建一个<code>fonts</code>的文件夹，用来存放字体。</p><p><img src="/2020/02/08/Project-MiCard/image-20200208211957292.png" alt="image-20200208211957292"></p><p>接着前往<code>pubspec.yaml</code>文件中添加fonts,老样子还是在<code>flutter</code>下。注意<strong><u>缩进</u></strong>！！</p><p><img src="/2020/02/08/Project-MiCard/image-20200208212159632.png" alt="image-20200208212159632"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">flutter:</span></span><br><span class="line">  <span class="attr">uses-material-design:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">assets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">images/git_portrait.jpg</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">fonts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">family:</span> <span class="string">Pacifico</span></span><br><span class="line">      <span class="attr">fonts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">asset:</span> <span class="string">fonts/Pacifico-Regular.ttf</span></span><br></pre></td></tr></table></figure><p>之后我们再点击<code>Package get</code>去重新加载。</p><p><img src="/2020/02/08/Project-MiCard/image-20200208212331348.png" alt="image-20200208212331348"></p><p>完成的差不多啦，最后一步是回到<code>main.dart</code>，</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Text(</span><br><span class="line">     <span class="string">'Dongyang Yu'</span>,</span><br><span class="line">     style: TextStyle(</span><br><span class="line">     fontSize: <span class="number">40</span>,</span><br><span class="line">     fontFamily: <span class="string">'Pacifico'</span>,</span><br><span class="line">     color: Colors.blue.shade900,</span><br><span class="line">     ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><blockquote><p>注意，此处字体名要与yaml文件中<code>family</code>后面的名字一致，另外，我们需要<strong>rebuild</strong>我们的project，不然字体不会更新。</p></blockquote><p>另外一行字我选择的是<code>Source Sans Pro</code></p><p>细心的童鞋应该看到，两个字体的颜色我用到了<code>.shade900</code>和<code>[100]</code>这表示是的是颜色的深浅，<u>数字越小，颜色越浅</u>，两种表达都可以。</p><p>还有就是改变字体的粗细，使用的属性是<code>fontWeight</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Text(</span><br><span class="line">     <span class="string">'FLUTTER DEVELOPER'</span>,</span><br><span class="line">     style: TextStyle(</span><br><span class="line">     fontSize: <span class="number">20.0</span>,</span><br><span class="line">     fontFamily: <span class="string">'SourceSansPro'</span>,</span><br><span class="line">     color: Colors.blueAccent[<span class="number">100</span>],</span><br><span class="line">     letterSpacing: <span class="number">2.5</span>,</span><br><span class="line">     fontWeight: FontWeight.bold,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h2 id="Icon"><a href="#Icon" class="headerlink" title="Icon"></a>Icon</h2><p><img src="/2020/02/08/Project-MiCard/image-20200208213845246.png" alt="image-20200208213845246"></p><p>小图标看起来是不是很可爱~！</p><p>这些图标可以在<a href="https://www.materialpalette.com/选择。" target="_blank" rel="noopener">https://www.materialpalette.com/选择。</a></p><p>这里注意到是图标和字体的结合，需要用到的是<code>Row</code>Widget，但是要将其组合成一个单独的组件，所以我们将<code>Row</code>放在<code>Container</code>里面。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  child: Row(</span><br><span class="line">    children: &lt;Widget&gt;[</span><br><span class="line">      Icon(</span><br><span class="line">        Icons.phone,</span><br><span class="line">        color: Colors.blue[<span class="number">100</span>],</span><br><span class="line">      ),</span><br><span class="line">      Text(</span><br><span class="line">        <span class="string">'+1 666 666 8888'</span>,</span><br><span class="line">        style: TextStyle(</span><br><span class="line">          color: Colors.blueAccent[<span class="number">900</span>],</span><br><span class="line">          fontSize: <span class="number">20.0</span>,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    ],</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="/2020/02/08/Project-MiCard/image-20200208215059019.png" alt="image-20200208215059019"></p><p>图标和号码看起来离得太近，这时候我们加入了啥？</p><h2 id="SizedBox"><a href="#SizedBox" class="headerlink" title="SizedBox"></a>SizedBox</h2><p>在Icon和Text之间插入它就好啦</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SizedBox(</span><br><span class="line">  width: <span class="number">10.0</span>,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="/2020/02/08/Project-MiCard/image-20200208215214330.png" alt="image-20200208215214330"></p><p><img src="/2020/02/08/Project-MiCard/image-20200208215407719.png" alt="image-20200208215407719"></p><p>加个背景颜色，看起来太靠左边和上方组件，这时候改怎么办呐？</p><h2 id="EdgeInsets"><a href="#EdgeInsets" class="headerlink" title="EdgeInsets"></a>EdgeInsets</h2><p>我们可以用<code>EdgeInsets</code>来修改margin和padding</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">     margin: EdgeInsets.symmetric(vertical: <span class="number">10.0</span>, horizontal: <span class="number">25.0</span>),</span><br><span class="line">     padding: EdgeInsets.all(<span class="number">10.0</span>),</span><br><span class="line">     color: Colors.white,</span><br><span class="line">    ...</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="/2020/02/08/Project-MiCard/image-20200208215713993.png" alt="image-20200208215713993"></p><p>同理，下方的邮件部分就交给你们去完成啦。Tips: <code>Icons.email</code></p><p><img src="/2020/02/08/Project-MiCard/image-20200208220107505.png" alt="image-20200208220107505"></p><h2 id="Card-amp-ListTile-widgets"><a href="#Card-amp-ListTile-widgets" class="headerlink" title="Card &amp; ListTile widgets"></a>Card &amp; ListTile widgets</h2><h3 id="Card"><a href="#Card" class="headerlink" title="Card"></a><a href="https://api.flutter.dev/flutter/material/Card-class.html" target="_blank" rel="noopener">Card</a></h3><p>其实Flutter自己就有实现card功能的插件，就叫<code>Card</code></p><p>但是呢，它没有<code>padding</code>属性，<img src="/2020/02/08/Project-MiCard/image-20200208220432085.png" alt="image-20200208220432085"></p><p><img src="/2020/02/08/Project-MiCard/image-20200208220453058.png" alt="image-20200208220453058"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Card(</span><br><span class="line">  margin: EdgeInsets.symmetric(vertical: 10.0, horizontal: 25.0),</span><br><span class="line">  color: Colors.white,</span><br><span class="line">  child: Row(</span><br><span class="line">    children: &lt;Widget&gt;[</span><br><span class="line">      Icon(</span><br><span class="line">        Icons.phone,</span><br><span class="line">        color: Colors.blue[300],</span><br><span class="line">      ),</span><br><span class="line">   ...</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>这样子看是不是有点挤得慌？</p><p>别急，虽然它不带padding属性，但我们有<code>Padding Class</code>啊！</p><p>我们将<code>Row</code>组件内嵌到一个<code>Padding</code>组件中，注意不是<code>Card</code>组件</p><blockquote><p>Tip: 快捷键<code>Alt+Enter</code>: 可以打开the <strong>Intention Actions</strong> menu 代码提示菜单<img src="/2020/02/08/Project-MiCard/image-20200208221024353.png" alt="image-20200208221024353"></p></blockquote><p>试比较一下</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// here</span></span><br><span class="line">Padding(</span><br><span class="line">    padding: EdgeInsets.all(<span class="number">40.0</span>),</span><br><span class="line">    child: Card(</span><br><span class="line">    margin:</span><br><span class="line">    EdgeInsets.symmetric(vertical: <span class="number">10.0</span>, horizontal: <span class="number">25.0</span>),</span><br><span class="line">    color: Colors.white,</span><br><span class="line">    ...</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="/2020/02/08/Project-MiCard/image-20200208220824103.png" alt="image-20200208220824103"></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Card(</span><br><span class="line">    margin: EdgeInsets.symmetric(vertical: <span class="number">10.0</span>, horizontal: <span class="number">25.0</span>),</span><br><span class="line">    color: Colors.white,</span><br><span class="line">    <span class="comment">// here</span></span><br><span class="line">    child: Padding(</span><br><span class="line">    padding: EdgeInsets.all(<span class="number">40.0</span>),</span><br><span class="line">    child: Row(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">        Icon(</span><br><span class="line">        Icons.phone,</span><br><span class="line">    ...</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="/2020/02/08/Project-MiCard/image-20200208221140528.png" alt="image-20200208221140528"></p><p>大家看到差别了吗，差别就是改变的事Card和Row之间的padding内边距</p><h3 id="ListTiles"><a href="#ListTiles" class="headerlink" title="ListTiles"></a><a href="https://api.flutter.dev/flutter/material/ListTile-class.html" target="_blank" rel="noopener">ListTiles</a></h3><p>查看Flutter 文档，发现<code>ListTile</code>: <strong>display icons and text in a card</strong>。 这不符合我们的要求吗！太棒了。</p><p>格式:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Card(</span><br><span class="line">  child: ListTile(</span><br><span class="line">    leading: FlutterLogo(),</span><br><span class="line">    title: Text(<span class="string">'One-line with leading widget'</span>),</span><br><span class="line">  ),</span><br></pre></td></tr></table></figure><p>举例：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Card(</span><br><span class="line">  margin: EdgeInsets.symmetric(vertical: <span class="number">10.0</span>, horizontal: <span class="number">25.0</span>),</span><br><span class="line">  color: Colors.white,</span><br><span class="line">  child: ListTile(</span><br><span class="line">    leading: Icon(</span><br><span class="line">      Icons.phone,</span><br><span class="line">      color: Colors.blue[<span class="number">300</span>],</span><br><span class="line">    ),</span><br><span class="line">    title: Text(</span><br><span class="line">      <span class="string">'+1 666 666 8888'</span>,</span><br><span class="line">      style: TextStyle(</span><br><span class="line">        color: Colors.blueAccent[<span class="number">900</span>],</span><br><span class="line">        fontSize: <span class="number">20.0</span>,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>成果图如下，就连SizedBox也省去了，真强大！</p><p><img src="/2020/02/08/Project-MiCard/image-20200208222231766.png" alt="image-20200208222231766"></p><h2 id="垂直水平居中"><a href="#垂直水平居中" class="headerlink" title="垂直水平居中"></a>垂直水平居中</h2><p>还记得上篇博文中的几个column的性质吗？</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">crossAxisAlignment: CrossAxisAlignment.center,</span><br></pre></td></tr></table></figure><p>这两行代码一加，居中问题搞定！</p><p><img src="/2020/02/08/Project-MiCard/image-20200208222812770.png" alt="image-20200208222812770"></p><h2 id="画龙点睛"><a href="#画龙点睛" class="headerlink" title="画龙点睛"></a>画龙点睛</h2><p>如果我想把上方的文字和下方的两行信息分割开来，我们当然可以用<code>SizedBox</code></p><p>但是还记得水平线<u>horizontal line</u>不？同样的，Flutter里面也有，叫做<code>Divider Class</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SizedBox(</span><br><span class="line">  height: <span class="number">20.0</span>,</span><br><span class="line">  width: <span class="number">150.0</span>,</span><br><span class="line">  child: Divider(</span><br><span class="line">    color: Colors.teal.shade50,</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="/2020/02/08/Project-MiCard/image-20200208223434708.png" alt="image-20200208223434708"></p><p>哎哟，不错哦~感觉更正式了。</p><h1 id="Recommended-website"><a href="#Recommended-website" class="headerlink" title="Recommended website"></a>Recommended website</h1><ul><li><p>字体网站: <a href="https://fonts.google.com" target="_blank" rel="noopener">https://fonts.google.com</a> :free for commercial use</p></li><li><p>图标网站: <a href="https://material.io/resources/icons/?style=baseline" target="_blank" rel="noopener">https://material.io/resources/icons/?style=baseline</a></p><ul><li>[推荐]网站：<a href="https://www.materialpalette.com/" target="_blank" rel="noopener">https://www.materialpalette.com/</a></li></ul></li></ul><h1 id="Shortcuts"><a href="#Shortcuts" class="headerlink" title="Shortcuts:"></a>Shortcuts:</h1><p><code>Alt+Enter</code>: pull up the Intention Actions menu 代码提示菜单</p><p><code>Ctrl+Q</code>: quick documentation lookup 快速查看文档</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://www.linkedin.com/learning/flutter-part-03-flutter-widgets" target="_blank" rel="noopener">https://www.linkedin.com/learning/flutter-part-03-flutter-widgets</a></p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Widgets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS249 General Usage Rubric</title>
      <link href="/2020/02/07/CS249-General-Usage-Rubric/"/>
      <url>/2020/02/07/CS249-General-Usage-Rubric/</url>
      
        <content type="html"><![CDATA[<p>今天我来和大家聊聊CS249 GUR的扣分点，是不是又很多同学第一次Project方法差不多都实现了，但是因为规范被扣到了负分？哈哈哈，第一次我也差不多和你们一样，作为T.A (Teaching assistant) 现在我来和大家唠唠这扣分点到底在哪。</p><a id="more"></a><ol><li><h1 id="use-of-non-self-documenting-or-single-letter-variable-1-per-declaration-or-use"><a href="#use-of-non-self-documenting-or-single-letter-variable-1-per-declaration-or-use" class="headerlink" title="use of non-self-documenting or single-letter variable: -1 per declaration or use"></a>use of non-self-documenting or single-letter variable: <strong>-1</strong> per declaration or use</h1><p>什么叫non-self-documenting variable呢？self-documenting，顾名思义，就是你自己定义的，可能别人不太理解的，特别是<strong>单字母变量</strong>，什么<code>i, j, k</code>啊，国内都这么定义，但是我们的Michael教授就觉得这点特别不好，影响了代码的可读性(readability)。所以大家最好用<u>单词</u>作为变量名，比如</p><p><code>index, outerIndex, innerIndex, indexOne, indexTwo</code>等等。</p></li><li><h1 id="missing-or-non-aligned-curly-braces-1-per-pair-occasion"><a href="#missing-or-non-aligned-curly-braces-1-per-pair-occasion" class="headerlink" title="missing or non-aligned curly braces: -1 per pair/occasion"></a>missing or non-aligned curly braces: <strong>-1</strong> per pair/occasion</h1><p>这个应该很好理解，就是<strong>花括号不对齐</strong>，要扣分！你说，我就是不想对齐，那没办法，教授就是这么规定的，我觉得下面这段代码的格式也不错啊。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">keepInMind</span> </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">              System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但下面这段代码是不是看起来更容易看出代码块呢。所以大家就将下面的格式作为标准，去执行它。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">keepInMind</span> </span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>当把上面两点给做到，就基本上不会扣除规范分了</strong>。</p></li><li><h1 id="redundant-boolean-test-1-per-occasion"><a href="#redundant-boolean-test-1-per-occasion" class="headerlink" title="redundant boolean test: -1 per occasion"></a>redundant boolean test: -1 per occasion</h1><p>a. e.g., <code>if( &lt;boolean expression&gt; == true )</code></p><p>b. e.g., <code>if( &lt;boolean expression&gt; == false )</code></p><p>不要写<strong>多余</strong>的代码，尽量精简。虽然什么两个例子没有语法错误，但确实是多余的</p><p>直接用下面的代替</p><p><code>if( &lt;boolean expression&gt; )</code></p><p><code>if( !&lt;boolean expression&gt; )</code></p></li><li><h1 id="second-or-subsequent-if-statement-that-should-logically-be-else-2-per-occasion"><a href="#second-or-subsequent-if-statement-that-should-logically-be-else-2-per-occasion" class="headerlink" title="second, or subsequent, if statement that should logically be else: -2 per occasion"></a>second, or subsequent, if statement that should logically be else: <strong>-2</strong> per occasion</h1><blockquote><p>“Talk is cheap. Show me the code.” —Linus Torvalds</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( num &lt; <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// statements </span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ( num &gt;= <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// statements </span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>大家觉得上面这段代码有没有毛病呢？乍一看没什么问题，但定睛一看，发现这边的<code>else if</code>是画蛇添足的，直接 <code>else</code>不就行了么。但屏幕前的你千万别笑，说不定什么时候你就犯这错误了。别问我怎么知道的……</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( num &lt; <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// statements </span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">else</span> ( num &gt;= <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// statements </span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><h1 id="any-data-state-change-in-array-brackets-or-in-method-parameters-2-per-occasion"><a href="#any-data-state-change-in-array-brackets-or-in-method-parameters-2-per-occasion" class="headerlink" title="any data/state change in array brackets or in method parameters: -2 per occasion"></a>any data/state change in array brackets or in method parameters: <strong>-2</strong> per occasion</h1><p>a. e.g., value = array[ index++ ];<br>b. e.g., value = someMethod( otherValue, myValue– );<br>c. note: array[ index + 1 ] or someMethod( otherValue, myValue – 1 ) are appropriate and acceptable</p><p><strong>不要</strong>在数组的<u>括号</u>或者<u>方法参数</u>中修改任何的数据</p><p>最好改成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">value = array[ index ];</span><br><span class="line">index++;</span><br></pre></td></tr></table></figure><p>记住就好，有的东西不需要去深究为什么(我懒得打了，哈哈哈)</p></li><li><h1 id="declaration-of-variable-within-any-loop-2-per-occasion"><a href="#declaration-of-variable-within-any-loop-2-per-occasion" class="headerlink" title="declaration of variable within any loop: -2 per occasion"></a>declaration of variable within any loop: <strong>-2</strong> per occasion</h1><p>a. e.g., for( int index = 0; … )</p><p>b. e.g.,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>( someCondition ) </span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">int</span> newValue = someValue;</span><br><span class="line">    ...</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><code>Object obj = new Object();</code>写在100个循环内等于你有<strong>100个引用</strong>对应了100个对象，所以100个对象在一段时间内都是会<strong>占用内存</strong>，直到内存不足Garbage Collection主动回收</p><p><code>obj = new Object();</code> 写在100个循环内等于你使用<strong>1个引用</strong>分别100次调用了100个对象，所以当后一个对象初始化后，前一个对象已经是“无引用状态”，会很快的被GC自动回收</p><p>这就是区别。</p><p>Tip: 最好把所有的变量声明都在方法的开头，增加<strong>可读性</strong></p></li><li><h1 id="use-of-incomplete-for-loop-e-g-for-index-lt-5-index-2-per-occasion"><a href="#use-of-incomplete-for-loop-e-g-for-index-lt-5-index-2-per-occasion" class="headerlink" title="use of incomplete for loop (e.g., for( ; index &lt; 5; index++ )): -2 per occasion"></a>use of incomplete for loop (e.g., for( ; index &lt; 5; index++ )): <strong>-2</strong> per occasion</h1><p>for循环里的表达式不要空着</p><p>如果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ( ; index &lt; <span class="number">5</span>; index++ )</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// statements</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>最好改成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"><span class="keyword">for</span> ( index = <span class="number">0</span>; index &lt; <span class="number">5</span>; index++ )</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// statements</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>增加可读性</strong></p></li><li><h1 id="use-of-if-else-in-place-of-single-Boolean-return-statement-2-per-occasion"><a href="#use-of-if-else-in-place-of-single-Boolean-return-statement-2-per-occasion" class="headerlink" title="use of if/else in place of single Boolean return statement: -2 per occasion"></a>use of if/else in place of single Boolean return statement: <strong>-2</strong> per occasion</h1><p>举个例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> resulte = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span>(result == <span class="keyword">true</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (result);</span><br></pre></td></tr></table></figure><p>看到区别了吗？一行代码可以解决的事，为什么要用七八行呢？</p></li><li><h1 id="any-code-on-the-same-line-as-a-curly-brace-2-per-occasion"><a href="#any-code-on-the-same-line-as-a-curly-brace-2-per-occasion" class="headerlink" title="any code on the same line as a curly brace: -2 per occasion"></a>any code on the same line as a curly brace: <strong>-2</strong> per occasion</h1><p>不要把代码和花括号放在同一行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">   </span>&#123; System.out.println(<span class="string">"Hello World"</span>); &#125;</span><br><span class="line">   <span class="comment">// 改成</span></span><br><span class="line">   &#123;</span><br><span class="line">    System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><h1 id="use-of-1-or-0-or-any-other-numbers-in-place-of-true-or-false-2-per-occasion"><a href="#use-of-1-or-0-or-any-other-numbers-in-place-of-true-or-false-2-per-occasion" class="headerlink" title="use of 1 or 0 (or any other numbers) in place of true or false: -2 per occasion"></a>use of 1 or 0 (or any other numbers) in place of true or false: <strong>-2</strong> per occasion</h1><p>这个很简单，不要用1和0去代替true和false，虽然可行，但不要这么做。</p></li><li><h1 id="use-of-literals-e-g-ints-chars-etc-when-constants-should-be-used-2-per-occasion"><a href="#use-of-literals-e-g-ints-chars-etc-when-constants-should-be-used-2-per-occasion" class="headerlink" title="use of literals (e.g., ints, chars, etc.) when constants should be used: -2 per occasion"></a>use of literals (e.g., ints, chars, etc.) when constants should be used: <strong>-2</strong> per occasion</h1><p>比如给定了常量, 那么在之后需要用到它的时候，不要用数字去代替它，举例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_CAPACITY = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayClass</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">   localArray = <span class="keyword">new</span> <span class="keyword">int</span>[ <span class="number">10</span> ];</span><br><span class="line">        </span><br><span class="line">   arrayCapacity = <span class="number">10</span>;</span><br><span class="line">        </span><br><span class="line">   arraySize = <span class="number">0</span>;  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>千万不要这么写</strong>！！！改成下面的形式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_CAPACITY = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayClass</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">   localArray = <span class="keyword">new</span> <span class="keyword">int</span>[ DEFAULT_CAPACITY ];</span><br><span class="line">        </span><br><span class="line">   arrayCapacity = DEFAULT_CAPACITY;</span><br><span class="line">        </span><br><span class="line">   arraySize = <span class="number">0</span>;  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>因为如果当别人要理解你的代码，看到这个神奇的数字 (magic number)10,还要在你的代码中去寻找10代表什么，这么一来二去，就<u>浪费了很多时间</u></p></li><li><h1 id="use-of-break-anywhere-but-in-a-switch-operation-2-per-occasion"><a href="#use-of-break-anywhere-but-in-a-switch-operation-2-per-occasion" class="headerlink" title="use of break anywhere but in a switch operation: -2 per occasion"></a>use of <code>break</code> anywhere but in a switch operation: <strong>-2</strong> per occasion</h1><p>这句话意识是除了switch语句，其他地方一律不准用``break<code>。教授说如果你这个地方要用</code>break`，说明你的<strong>逻辑</strong>还不清楚</p></li><li><h1 id="use-of-unspecified-try-catch-2-per-occasion"><a href="#use-of-unspecified-try-catch-2-per-occasion" class="headerlink" title="use of unspecified try/catch: -2 per occasion"></a>use of unspecified try/catch: <strong>-2</strong> per occasion</h1><p>不要使用该语句去捕获异常。</p></li><li><h1 id="use-of-continue-anywhere-3-per-occasion"><a href="#use-of-continue-anywhere-3-per-occasion" class="headerlink" title="use of continue anywhere: -3 per occasion"></a>use of <code>continue</code> anywhere: <strong>-3</strong> per occasion</h1><p>同12中<code>break</code>，用它说明你逻辑还不清楚</p></li><li><h1 id="any-I-O-in-a-method-not-specified-for-I-O-operations-3-per-occasion"><a href="#any-I-O-in-a-method-not-specified-for-I-O-operations-3-per-occasion" class="headerlink" title="any I/O in a method not specified for I/O operations: -3 per occasion"></a>any I/O in a method not specified for I/O operations: <strong>-3</strong> per occasion</h1><p>任何没有明确指出需要输入输出 (input/output)的地方，不要用</p></li><li><h1 id="use-of-methods-in-parameter-argument-lists-3-per-occasion"><a href="#use-of-methods-in-parameter-argument-lists-3-per-occasion" class="headerlink" title="use of methods in parameter/argument lists: -3 per occasion"></a>use of methods in parameter/argument lists: <strong>-3</strong> per occasion</h1></li><li><h1 id="use-of-methods-in-array-brackets-3-per-occasion"><a href="#use-of-methods-in-array-brackets-3-per-occasion" class="headerlink" title="use of methods in array brackets: -3 per occasion"></a>use of methods in array brackets: <strong>-3</strong> per occasion</h1><p>不要在方法参数或数组里调用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array[getNumber(input)];</span><br><span class="line"></span><br><span class="line"><span class="comment">//改成</span></span><br><span class="line"></span><br><span class="line">num = getNumber(input);</span><br><span class="line">array[num];</span><br></pre></td></tr></table></figure><p>先赋值给一个变量，再去使用，目的也是为了增加可读性，另外保证一行代码不要过长</p></li><li><h1 id="creation-or-use-of-empty-if-or-else-blocks-3-per-occasion"><a href="#creation-or-use-of-empty-if-or-else-blocks-3-per-occasion" class="headerlink" title="creation or use of empty if or else blocks: -3 per occasion"></a>creation or use of empty if or else blocks: <strong>-3</strong> per occasion</h1><p>不要创建货使用空的if else语句</p></li><li><h1 id="placement-of-main-method-in-any-ADT-class-3-per-occasion"><a href="#placement-of-main-method-in-any-ADT-class-3-per-occasion" class="headerlink" title="placement of main method in any ADT class: -3 per occasion"></a>placement of main method in any ADT class: <strong>-3</strong> per occasion</h1><p>不要在抽象数据类里放主方法</p></li><li><h1 id="code-more-than-80-characters-3-per-five-lines"><a href="#code-more-than-80-characters-3-per-five-lines" class="headerlink" title="code more than 80 characters: -3 per five lines"></a>code more than 80 characters: <strong>-3</strong> per five lines</h1><p>正如我在17中提到的，避免代码过长，这里要求少于80个字符长度，为的是不需要水平移动去看代码</p></li><li><h1 id="use-of-ternary-operator-3-per-occasion"><a href="#use-of-ternary-operator-3-per-occasion" class="headerlink" title="use of ternary operator: -3 per occasion"></a>use of ternary operator: <strong>-3</strong> per occasion</h1><p>不要使用三元运算符</p></li></ol><p>可算打完了，希望大家在写完代码的时候就来对照下GUR，将能拿的分全拿到！最后都拿A！冲冲冲~</p>]]></content>
      
      
      <categories>
          
          <category> Data Structure </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Flutter widgets</title>
      <link href="/2020/02/04/Flutter-widgets/"/>
      <url>/2020/02/04/Flutter-widgets/</url>
      
        <content type="html"><![CDATA[<h1 id="Hot-Reload"><a href="#Hot-Reload" class="headerlink" title="Hot Reload"></a>Hot Reload</h1><p>For <strong>Hot Reload</strong> to work, we have to have the things that we’ve changed <strong>inside</strong> a Flutter <strong>stateless</strong> or <strong>stateful</strong> widget.</p><p><strong>It only looks at the changes that were made.</strong> So, size of project doesn’t matter.</p><a id="more"></a><blockquote><p>Hot Reload is default to happen when you save your project.</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203105741240-1580805908362.png" alt="image-20200203105741240"></p><p>Instead of running that Material App, including all of those things there, I’m simply going to say runApp, and the app that we’re going to run is MyApp. So you can see that this hasn’t really changed our app at all, all it’s done is we’ve <u>separated out the part where we build our Material App into a separate widget</u>. And this is a stateless widget.</p><p>Now, what a stateless widget comes with is this method called <code>build</code>. And, this method gets called <strong>whenever we create a new version of this widget</strong>. That means that if I go ahead and change this color from teal to red, and I click on the ==Hot Reload== button, then it will go and check to see, what was the code that was changed most recently? Namely, teal became red. It will look to see where the closest build function is, and it will rerun it.</p><h1 id="Comparison-between-Hot-Reload-and-Hot-Restart"><a href="#Comparison-between-Hot-Reload-and-Hot-Restart" class="headerlink" title="Comparison between Hot Reload and Hot Restart"></a>Comparison between Hot Reload and Hot Restart</h1><p>The reason why hot reload can move over changes so quickly is that Hot Reload only checks the things changed but <strong>doesn’t</strong> change the state of your app. For example, if you type something in app, it will not be erased.</p><p>But Hot Restart in fact reset the state of your app. For example, the form or sth you typed will be reset.</p><p>Example:</p><p>一开始背景为red，在文本框输入Hello,然后将red改为purple，<br>点击<strong>Hot Reload</strong>，背景改变，文本不改变；<br>但点击<strong>Hot Restart</strong>,背景改变，文本框重置。</p><p><img src="/2020/02/04/Flutter-widgets/image-20200203112350226.png" alt> <img src="/2020/02/04/Flutter-widgets/image-20200203112032132.png" alt> <img src="/2020/02/04/Flutter-widgets/image-20200203112054843.png" alt></p><h2 id="StateFulWidget和StatelessWidget"><a href="#StateFulWidget和StatelessWidget" class="headerlink" title="StateFulWidget和StatelessWidget"></a>StateFulWidget和StatelessWidget</h2><p><a href="https://www.jianshu.com/p/4178bbc2375e" target="_blank" rel="noopener">https://www.jianshu.com/p/4178bbc2375e</a></p><h2 id="Container-widgets"><a href="#Container-widgets" class="headerlink" title="Container widgets"></a>Container widgets</h2><p>It’s like <code>&lt;div&gt;</code> in HTML.</p><h3 id="Layout-behavior"><a href="#Layout-behavior" class="headerlink" title="Layout behavior"></a>Layout behavior</h3><p>Container with <strong>no children</strong> try to be as big as possible unless constraints are bounded.</p><p>If it has a child, container will shrinks to the size of the child widget.</p><p><img src="/2020/02/04/Flutter-widgets/image-20200203152959890.png" alt></p><p>如何保证屏幕上的内容安全不受其他边框元素的影响比如顶部的工具条这里有时间，信号，刻痕?</p><p>这时候可以用到</p><h3 id="SafeArea-widget"><a href="#SafeArea-widget" class="headerlink" title="SafeArea widget"></a><strong>SafeArea widget</strong></h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Container(</span><br><span class="line">            color: Colors.white,</span><br><span class="line">            child: Text(<span class="string">'Hello'</span>),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需将Container widget放在SafeArea组件里面即可。效果如下<img src="/2020/02/04/Flutter-widgets/image-20200205162625920.png" alt="image-20200205162625920"></p><p>当然，如果想要移动组件，可以用到</p><h3 id="EdgeInsets-Widget"><a href="#EdgeInsets-Widget" class="headerlink" title="EdgeInsets Widget"></a><a href="https://api.flutter.dev/flutter/painting/EdgeInsets-class.html" target="_blank" rel="noopener">EdgeInsets Widget</a></h3><blockquote><p>Typically used for an offset from each of the four sides of a box. For example, the padding inside a box can be represented using this class.</p></blockquote><p><strong>Usage</strong>:</p><p><u>此处我们以margin为例</u>，padding同理</p><p><code>EdgeInsets.all(double value)</code>: 上下左右的offset(偏移量都相同)，</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Container(</span><br><span class="line">            height: <span class="number">100.0</span>,</span><br><span class="line">            width: <span class="number">100.0</span>,</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            margin: EdgeInsets.all(<span class="number">20.0</span>),</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            color: Colors.white,</span><br><span class="line">            child: Text(<span class="string">'Hello'</span>),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>EdgeInsets.fromLTRB(double left, double top, double right, double bottom)</code>: 对上下左右指定不同的偏移量</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: EdgeInsets.fromLTRB(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>),</span><br></pre></td></tr></table></figure><p><code>EdgeInsets.only({double left: 0.0, double top: 0.0, double right: 0.0, double bottom: 0.0})</code>: 仅对几个方向赋予偏移量</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: EdgeInsets.only(left: <span class="number">20.0</span>),</span><br></pre></td></tr></table></figure><p><code>EdgeInsets.symmetric({double vertical: 0.0, double horizontal: 0.0})</code>: 创建对称的偏移量</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: EdgeInsets.symmetric(vertical: <span class="number">29</span>),</span><br></pre></td></tr></table></figure><p>Keep in mind: Container is a <strong><a href="https://flutter.dev/docs/development/ui/widgets/layout#Single-child%20layout%20widgets" target="_blank" rel="noopener">single-child layout</a></strong> widgets, so it can only have <strong>one</strong> child at most</p><h1 id="Multi-child-layout-widgets"><a href="#Multi-child-layout-widgets" class="headerlink" title="Multi-child layout widgets"></a>Multi-child layout widgets</h1><h2 id="Columns-widget"><a href="#Columns-widget" class="headerlink" title="Columns() widget"></a>Columns() widget</h2><blockquote><p>因为是列，所以它会尽可能地多占用垂直空间。take up as much vertical space as possible</p><p><img src="/2020/02/04/Flutter-widgets/image-20200203163126667.png" alt>可以在图中看到，虽然只有三个组 件，但是却占用了整整一列</p></blockquote><h3 id="mianAxisSize"><a href="#mianAxisSize" class="headerlink" title="mianAxisSize"></a>mianAxisSize</h3><blockquote><p>在分配空间之后，可能会有一些剩余的空闲空间。此值控制是否占用<strong>最大化或最小化</strong>空闲空间量</p></blockquote><p><strong>Usage:</strong></p><h4 id="MainAxisSize-min"><a href="#MainAxisSize-min" class="headerlink" title="MainAxisSize.min:"></a><code>MainAxisSize.min</code>:</h4><blockquote><p>占据最小空闲空间</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203163828092.png" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            mainAxisSize: MainAxisSize.min,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MainAxisSize-min-default"><a href="#MainAxisSize-min-default" class="headerlink" title="MainAxisSize.min (default)"></a><code>MainAxisSize.min</code> (default)</h4><blockquote><p>占用最大空闲空间</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203163921666.png" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mainAxisSize: MainAxisSize.max,</span><br></pre></td></tr></table></figure><p>如果我们想在竖直方向上改变排列顺序呢?</p><h3 id="verticalDirection"><a href="#verticalDirection" class="headerlink" title="verticalDirection"></a>verticalDirection</h3><h4 id="VerticalDirection-up"><a href="#VerticalDirection-up" class="headerlink" title="VerticalDirection.up:"></a><code>VerticalDirection.up</code>:</h4><blockquote><p>自下而上堆叠，The ‘start’ is at the bottom, the ‘end’ is at the top</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203174639753.png" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            verticalDirection: VerticalDirection.up,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="VerticalDirection-down-default"><a href="#VerticalDirection-down-default" class="headerlink" title="VerticalDirection.down (default)"></a><code>VerticalDirection.down</code> (default)</h4><blockquote><p>自上而下堆叠，The ‘start’ is at the top, the ‘end’ is at the bottom</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203174704288.png" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verticalDirection: VerticalDirection.down,</span><br></pre></td></tr></table></figure><hr><p>如果我们不想改变方向，指向改变不同组件之间的spacing间隔呢？</p><h4 id="mainAxisAlignment"><a href="#mainAxisAlignment" class="headerlink" title="mainAxisAlignment"></a>mainAxisAlignment</h4><h3 id="MainAxisAlignment-start-default"><a href="#MainAxisAlignment-start-default" class="headerlink" title="MainAxisAlignment.start (default)"></a><code>MainAxisAlignment.start</code> (default)</h3><blockquote><p>Place the children as close to the ==start== of the main axis as possible.</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203175453304.png" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            mainAxisAlignment: MainAxisAlignment.start,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MainAxisAlignment-end"><a href="#MainAxisAlignment-end" class="headerlink" title="MainAxisAlignment.end"></a><code>MainAxisAlignment.end</code></h4><blockquote><p>Place the children as close to the end of the main axis as possible.</p></blockquote><p>Tip: 与<code>VerticalDeriction.down</code>的区别，<code>down</code>不仅会将子组件放置在column的底部，而且会<strong>change their order</strong>.</p><p><img src="/2020/02/04/Flutter-widgets/image-20200203175530730-1580805908363.png" alt="image-20200203175530730"></p><h4 id="MainAxisAlignment-center"><a href="#MainAxisAlignment-center" class="headerlink" title="MainAxisAlignment.center"></a><code>MainAxisAlignment.center</code></h4><blockquote><p>Place the children as close to the <strong>middle</strong> of the main axis as possible</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203180017152.png" alt></p><h4 id="MainAxisAlignment-sapceEvenly"><a href="#MainAxisAlignment-sapceEvenly" class="headerlink" title="MainAxisAlignment.sapceEvenly"></a><code>MainAxisAlignment.sapceEvenly</code></h4><blockquote><p>calculate the free space evenly and place it between the children as well as <strong>before and after first and last child</strong></p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            mainAxisAlignment: MainAxisAlignment.spaceEvenly,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/02/04/Flutter-widgets/image-20200203180429702.png" alt></p><h4 id="MainAxisAlignment-spaceBetween"><a href="#MainAxisAlignment-spaceBetween" class="headerlink" title="MainAxisAlignment.spaceBetween"></a><code>MainAxisAlignment.spaceBetween</code></h4><blockquote><p>与Evenly的唯一区别就是不包含第一和最后一个子组件</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203180658412.png" alt></p><hr><p>How the children should be placed along the cross axis？子组件们应该如何沿横轴摆放？比方说，Column widget在横轴(horizontally)如何对齐</p><h3 id="crossAxisAlignment"><a href="#crossAxisAlignment" class="headerlink" title="crossAxisAlignment"></a>crossAxisAlignment</h3><p>==Attention==: 这个性质起作用的前提是多个组件长宽<strong>不一样</strong></p><h4 id="CrossAxisAlignment-center-default"><a href="#CrossAxisAlignment-center-default" class="headerlink" title="CrossAxisAlignment.center (default)"></a><code>CrossAxisAlignment.center</code> (default)</h4><blockquote><p>Place the children so that their centers align with the <u>middle of the cross axis</u>.</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">200.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/02/04/Flutter-widgets/image-20200203181245499.png" alt></p><h4 id="CrossAxisAlignment-end"><a href="#CrossAxisAlignment-end" class="headerlink" title="CrossAxisAlignment.end"></a><code>CrossAxisAlignment.end</code></h4><blockquote><p>根据右边的轴对齐。Place the children as close to the end of the cross axis as possible.</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203181450209.png" alt></p><h4 id="CrossAxisAlignment-start"><a href="#CrossAxisAlignment-start" class="headerlink" title="CrossAxisAlignment.start"></a><code>CrossAxisAlignment.start</code></h4><blockquote><p>根据左边的轴对齐</p></blockquote><p><img src="/2020/02/04/Flutter-widgets/image-20200203181533296.png" alt></p><hr><p>但是，如果你想使这些组件靠在手机屏幕右侧,该怎么办呢？</p><h3 id="Strategy"><a href="#Strategy" class="headerlink" title="==Strategy=="></a>==Strategy==</h3><p>我们可以再创建一个子组件，使他不可见，但却拥有无限宽度</p><p><img src="/2020/02/04/Flutter-widgets/image-20200203182218002.png" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.end,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// 灵魂之处！</span></span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="built_in">double</span>.infinity,</span><br><span class="line">              )</span><br><span class="line">              <span class="comment">// 灵魂之处</span></span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>Now, what if, you wanted actually to stretch all your containers so that they fill the entire width? 想拉伸所有的容器，使它们能填满整个宽度？</p><p>方法一，将所有容器的width改为``double.infinity`</p><p>方法二，</p><h4 id="CrossAxisAlignment-stretch"><a href="#CrossAxisAlignment-stretch" class="headerlink" title="CrossAxisAlignment.stretch"></a><code>CrossAxisAlignment.stretch</code></h4><p><img src="/2020/02/04/Flutter-widgets/image-20200203184812125.png" alt></p><hr><p>如果想要在每个组件之间增加指定间距呢？</p><h3 id="Strategy-1"><a href="#Strategy-1" class="headerlink" title="==Strategy=="></a>==Strategy==</h3><h4 id="SizeBox"><a href="#SizeBox" class="headerlink" title="SizeBox"></a><code>SizeBox</code></h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        backgroundColor: Colors.blueAccent,</span><br><span class="line">        body: SafeArea(</span><br><span class="line">          child: Column(</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                width: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.white,</span><br><span class="line">                child: Text(<span class="string">'Container 1'</span>),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// here</span></span><br><span class="line">              SizedBox(</span><br><span class="line">                height: <span class="number">20</span>,</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// here</span></span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Text(<span class="string">'Container 2'</span>),</span><br><span class="line">              ),</span><br><span class="line">              Container(</span><br><span class="line">                width: <span class="number">100</span>,</span><br><span class="line">                height: <span class="number">100.0</span>,</span><br><span class="line">                color: Colors.pink,</span><br><span class="line">                child: Text(<span class="string">'Container 3'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/02/04/Flutter-widgets/image-20200203185040436.png" alt></p><h2 id="Rows-widget"><a href="#Rows-widget" class="headerlink" title="Rows() widget"></a>Rows() widget</h2><p>这些同样适用于Row!~</p><p><a href="https://medium.com/flutter-community/flutter-layout-cheat-sheet-5363348d037e" target="_blank" rel="noopener">Cheat sheet</a></p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Widgets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>float在内存中的表示</title>
      <link href="/2020/02/04/float%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/"/>
      <url>/2020/02/04/float%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Float在内存中的表示"><a href="#Float在内存中的表示" class="headerlink" title="Float在内存中的表示"></a>Float在内存中的表示</h1><p>Float型，俗称浮点型，在C中占4 个bytes（字节）。</p><p>按照 <a href="https://en.wikipedia.org/wiki/IEEE_754" target="_blank" rel="noopener">IEEE754</a> 标准,在计算机中的存储格式如下：</p><p><img src="/2020/02/04/float%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/image-20200203232515753.png" alt></p><p>公式为N= (-1)<sup>Sign</sup> ×(1.Mantissa) × 2<sup>(Exponent-127)</sup></p><a id="more"></a><p>分别由符号位、指数位（阶码）和小数位(Mantissa)组成，分别占1、8和23位bits。</p><blockquote><p>忘说了，因为都是把1作为整数部分，所以就不在内存中表示，但默认其整数位为<strong>1</strong></p></blockquote><h2 id="那大家也应该和我一样，困惑为什么阶码的范围是1-254呢？"><a href="#那大家也应该和我一样，困惑为什么阶码的范围是1-254呢？" class="headerlink" title="那大家也应该和我一样，困惑为什么阶码的范围是1~254呢？"></a>那大家也应该和我一样，困惑为什么阶码的范围是<span style="background:#ff0">1~254</span>呢？</h2><p>首先，八位数应该就有2^8^，256种可能性，但因为要从0开始，所以是0~255。<strong>但是</strong>，IEEE754把<code>0</code>和<code>255</code>归类到<u>次正规数(Denormalized/subnormal number)</u>和<u>无穷大</u>去啦，所以我们能用来正常表示的只有1~254种可能性了。</p><p>次正规数：如果<span style="background:#ff0">指数都为0</span>，则不管小树部分为多少，都说他们是次正规数</p><p>举个例子：</p><p><img src="/2020/02/04/float%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/image-20200203234554930.png" alt="image-20200203234554930"></p><p>小数位(.11)<sub>b</sub>=2<sup>-1</sup>+2<sup>-2</sup>=0.75;</p><p>指数为e=0, e-127=-127;</p><p>则该浮点数为 1.75×2<sup>-127</sup> = 0.75×2<sup>-126</sup></p><h2 id="为什么表示时指数部分是2的E-127次方呢？"><a href="#为什么表示时指数部分是2的E-127次方呢？" class="headerlink" title="为什么表示时指数部分是2的E-127次方呢？"></a>为什么表示时指数部分是2的E-127次方呢？</h2><blockquote><p>通常我们称此处的127为<strong>偏移量</strong>(bias)</p></blockquote><p>因为IEEE为了不在阶码中引入符号位，所以加入偏移量。不然1~254只能表示指数大于0 的部分，那对小于0的部分不就不公平了嘛。</p><p>所以引入偏移量127，这样E-127= <strong>[-126,127]</strong>，就可以表示指数为负的部分啦~~</p><p>那为什么是127呢？很简单，因为254/2=127！是不是很简单就能像明白？奥利给！</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
          <category> Memory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Float </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/01/22/hello-world/"/>
      <url>/2020/01/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="图片大小设置"><a href="#图片大小设置" class="headerlink" title="图片大小设置"></a>图片大小设置</h3><img src="/2020/01/22/hello-world/xxxxx.png" width="40%" title="xxxx" alt="xxx">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
